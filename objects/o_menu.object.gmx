<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var aux, archivo;

ini_open("configuracion.ini");
aux = ini_read_string("menu", "ultimo", "");
ini_close();

escribe = 0;//1mapa, 2nombre, 3web, 4puerto
num = 0;
pagina[0] = "";
conteo = 0;
archivo = file_find_first(working_directory + "\mupa_*.ini", fa_archive);
if(archivo != ""){
    do{
        conteo++;
        pagina[conteo] = string_replace(string_replace(archivo, ".ini", ""), "mupa_", "");
        if(pagina[conteo] == aux){
            num = conteo;
        }
        archivo = file_find_next();
    }
    until(archivo == "");
}
file_find_close();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouse_check_button(mb_right)){
    if(point_distance(mouse_x, mouse_y, room_width * 0.07, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
        if(num &gt; 0){
            num--;
        }
        else{
            num = conteo;
        }
        pagina[0] = "";
    }
    else if(point_distance(mouse_x, mouse_y, room_width * 0.42, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
        if(num &lt; conteo){
            num++;
        }
        else{
            num = 0;
        }
        pagina[0] = "";
    }
    else if(point_distance(mouse_x, mouse_y, room_width * 0.625, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
        if(o_control.q_pelo == 0){
            o_control.q_pelo = m_pelos;
        }
        else{
            o_control.q_pelo--;
        }
    }
    else if(point_distance(mouse_x, mouse_y, room_width * 0.875, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
        if(o_control.q_pelo == m_pelos){
            o_control.q_pelo = 0;
        }
        else{
            o_control.q_pelo++;
        }
    }
    else if(point_distance(mouse_x, mouse_y, room_width * 0.625, room_height * 0.63) &lt; m_mouse){
        if(o_control.q_idioma == m_idiomas){
            o_control.q_idioma = 0;
        }
        else{
            o_control.q_idioma++;
        }
    }
}
else if(mouse_check_button_pressed(mb_left)){
    if(point_distance(mouse_x, mouse_y, room_width * 0.25, room_height * 0.3) &lt; m_mouse){
        escribe = 1;
    }
    else if(point_distance(mouse_x, mouse_y, room_width * 0.75, room_height * 0.3) &lt; m_mouse){
        escribe = 2;
    }
    else if(point_distance(mouse_x, mouse_y, room_width * 0.25, room_height * 0.75) &lt; m_mouse){
        escribe = 3;
    }
    else if(point_distance(mouse_x, mouse_y, room_width * 0.15, room_height * 0.85) &lt; m_mouse){
        escribe = 4;
    }
    else{
        escribe = 0;
        if(point_distance(mouse_x, mouse_y, room_width * 0.07, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
            if(num &gt; 0){
                num--;
            }
            else{
                num = conteo;
            }
            pagina[0] = "";
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.14, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
            if(window_get_fullscreen()){
                window_set_fullscreen(false);
                ini_open("configuracion.ini");
                ini_write_string("juego", "full", "0");
                ini_close();
                s_ventana();
            }
            else{
                var aux1;
                aux1 = get_open_filename("INI|mupa_*.ini", "");
                if(aux1 != ""){
                    file_copy(aux1, filename_name(aux1));
                    room_restart();
                }
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.21, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
            if(window_get_fullscreen()){
                window_set_fullscreen(false);
                ini_open("configuracion.ini");
                ini_write_string("juego", "full", "0");
                ini_close();
                s_ventana();
            }
            else if(num &gt; 0){
                var aux2;
                aux2 = get_save_filename("INI|mupa_*.ini", "mupa_" + pagina[num]);
                if(aux2 != ""){
                    file_copy("mupa_" + pagina[num] + ".ini", aux2);
                }
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.28, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
            if(file_exists("mupa_" + pagina[num] + ".ini")){
                var unun;
                unun = false;
                with(o_mensaje){
                    if(elmensaje == "delete?"){
                        unun = true;
                    }
                }
                if(unun){
                    file_delete("mupa_" + pagina[num] + ".ini");
                    room_restart();
                }
                else{
                    s_creamensaje("delete?", c_yellow);
                }
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.35, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
            if(window_get_fullscreen()){
                window_set_fullscreen(false);
                ini_open("configuracion.ini");
                ini_write_string("juego", "full", "0");
                ini_close();
                s_ventana();
            }
            else if(num &gt; 0){
                var aux3;
                aux3 = get_save_filename("PNG|*.png", "mupa_" + pagina[num]);
                if(aux3 != ""){
                    s_pintarcuadro(pagina[num], aux3);
                }
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.42, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
            if(num &lt; conteo){
                num++;
            }
            else{
                num = 0;
            }
            pagina[0] = "";
        }
        else if(point_distance(mouse_x, mouse_y, 24, 24) &lt; m_mouse){
            if(window_get_fullscreen()){
                window_set_fullscreen(false);
                ini_open("configuracion.ini");
                ini_write_string("juego", "full", "0");
                ini_close();
                s_ventana();
            }
            else{
                window_set_fullscreen(true);
                ini_open("configuracion.ini");
                ini_write_string("juego", "full", "1");
                ini_close();
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width - 24, 24) &lt; m_mouse){
            var unun;
            unun = false;
            with(o_mensaje){
                if(elmensaje == "exit?"){
                    unun = true;
                }
            }
            if(unun){
                game_end();
            }
            else{
                s_creamensaje("exit?", c_gray);
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width - 74, 24) &lt; m_mouse){
            if(o_control.sonido == 1){
                o_control.sonido = 0;
            }
            else{
                o_control.sonido += 0.1;
            }
            ini_open("configuracion.ini");
            ini_write_string("juego", "sonido", string(o_control.sonido));
            ini_close();
            audio_master_gain(o_control.sonido);
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.875, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
            if(o_control.q_pelo == m_pelos){
                o_control.q_pelo = 0;
            }
            else{
                o_control.q_pelo++;
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.625, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
            if(o_control.q_pelo == 0){
                o_control.q_pelo = m_pelos;
            }
            else{
                o_control.q_pelo--;
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.625, room_height * 0.63) &lt; m_mouse){
            if(o_control.q_idioma == m_idiomas){
                o_control.q_idioma = 0;
            }
            else{
                o_control.q_idioma++;
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.21, room_height * 0.55) &lt; m_mouse){
            if(regeplus){
                regeplus = false;
            }
            else{
                regeplus = true;
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.28, room_height * 0.55) &lt; m_mouse){
            if(porpuntos){
                porpuntos = false;
            }
            else{
                porpuntos = true;
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.35, room_height * 0.85) &lt; m_mouse){
            if(clipboard_has_text()){
                var nmn;
                nmn = clipboard_get_text();
                if(string_length(nmn) &gt; 20){
                    nmn = string_copy(nmn, 1, 20);
                }
                o_control.q_web = nmn;
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.35, room_height * 0.55) &lt; m_mouse){
            if(o_control.ordenanpcs == 3){
                o_control.ordenanpcs = 0;
            }
            else{
                o_control.ordenanpcs++;
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.07, room_height * 0.55) &lt; m_mouse){
            if(num == 0 and pagina[num] == ""){
                s_creamensaje("write filename", c_orange);
            }
            else{
                o_control.mapa = pagina[num];
                room_goto(w_editor);
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.42, room_height * 0.55) &lt; m_mouse){
            if(num &gt; 0){
                if(os_is_network_connected()){
                    o_control.mapa = pagina[num];
                    escliente = false;
                    room_goto(w_mundo);
                }
                else{
                    s_creamensaje("unconnected", c_orange);
                }
            }
            else{
                s_creamensaje("select map", c_orange);
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width * 0.42, room_height * 0.85) &lt; m_mouse){
            if(o_control.q_puerto &lt;= 65535 and o_control.q_puerto &gt;= 1024){
                if(os_is_network_connected()){
                    escliente = true;
                    room_goto(w_mundo);
                }
                else{
                    s_creamensaje("unconnected", c_orange);
                }
            }
            else{
                s_creamensaje("port in#1024 to 65535", c_orange);
            }
        }
        else if(point_distance(mouse_x, mouse_y, room_width - 24, room_height - 72) &lt; m_mouse){
            if(choose(true, false)){
                url_open("https://www.dropbox.com/sh/plhbo1ornjah8jb/AAAOdaSe5JArLE1XRo--Eh_7a?dl=0");
            }
            else{
                url_open("http://gamejolt.com/@PersonajeX/games");
            }
        }
    }
}
else if(keyboard_check_pressed(vk_anykey)){
    switch(escribe){
        case 1:
            pagina[0] = s_escribel(pagina[0], 20);
        break;
        case 2:
            o_control.q_nombre = s_escribel(o_control.q_nombre, m_nombre);
        break;
        case 3:
            o_control.q_web = s_escriben(o_control.q_web, 20, true);
        break;
        case 4:
            o_control.q_puerto = real(s_escriben(string(o_control.q_puerto), 5, false));
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_guardaconfig();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_guardaconfig();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var aux, c_c, i;
draw_set_halign(fa_center);
draw_set_valign(fa_middle);

//dibujar titulo y version
draw_text_transformed_colour(room_width * 0.5, 48, "MULTIPALITOS", 3, 3, 0,
    c_maroon, c_maroon, c_maroon, c_maroon, 1);
if(o_control.nuevaversion){
    draw_text_colour(room_width * 0.8, 75, "v" + m_version + " obsolete", c_black, c_black, c_black, c_black, 1);
}
else{
    draw_text_colour(room_width * 0.8, 75, "v" + m_version, c_black, c_black, c_black, c_black, 1);
}

//dibujar barra nombre de archivos
if(point_distance(mouse_x, mouse_y, room_width * 0.25, room_height * 0.3) &lt; m_mouse){
    aux = 1.2;
}
else{
    aux = 1;
}
if(escribe == 1){
    c_c = c_orange;
}
else{
    c_c = c_white;
}
draw_sprite_ext(d_texto, 0, room_width * 0.25, room_height * 0.3, 1 + aux, aux, 0, c_c, 1);
if(pagina[num] == ""){
    draw_text_transformed_colour(room_width * 0.25, room_height * 0.3, "***new_filename***", aux, aux, 0, c_black, c_black, c_black, c_black, 1);
}
else{
    draw_text_transformed_colour(room_width * 0.25, room_height * 0.3, pagina[num], aux, aux, 0, c_black, c_black, c_black, c_black, 1);
}
draw_text_colour(room_width * 0.25, room_height * 0.3 - 30, string(num) + "/" + string(conteo), c_black, c_black, c_black, c_black, 1);

//dibujar barra nombre jugador
if(point_distance(mouse_x, mouse_y, room_width * 0.75, room_height * 0.3) &lt; m_mouse){
    aux = 1.2;
}
else{
    aux = 1;
}
if(escribe == 2){
    c_c = c_orange;
}
else{
    c_c = c_white;
}
draw_sprite_ext(d_texto, 0, room_width * 0.75, room_height * 0.3, 1 + aux, aux, 0, c_c, 1);
if(o_control.q_nombre == ""){
    draw_text_transformed_colour(room_width * 0.75, room_height * 0.3, "***player_name***", aux, aux, 0, c_black, c_black, c_black, c_black, 1);
}
else{
    draw_text_transformed_colour(room_width * 0.75, room_height * 0.3, o_control.q_nombre, aux, aux, 0, c_black, c_black, c_black, c_black, 1);
}

//dibujar barra ip servidor
if(point_distance(mouse_x, mouse_y, room_width * 0.25, room_height * 0.75) &lt; m_mouse){
    aux = 1.2;
}
else{
    aux = 1;
}
if(escribe == 3){
    c_c = c_orange;
}
else{
    c_c = c_white;
}
draw_sprite_ext(d_texto, 0, room_width * 0.25, room_height * 0.75, 1 + aux, aux, 0, c_c, 1);
if(o_control.q_web == ""){
    draw_text_transformed_colour(room_width * 0.25, room_height * 0.75, "***ip_server***", aux, aux, 0, c_black, c_black, c_black, c_black, 1);
}
else{
    draw_text_transformed_colour(room_width * 0.25, room_height * 0.75, o_control.q_web, aux, aux, 0, c_black, c_black, c_black, c_black, 1);
}
draw_text_colour(room_width * 0.25, room_height * 0.75 - 40,
    "self: 127.0.0.1#usually: 192.168.1.*", c_gray, c_gray, c_gray, c_gray, 1);

//dibujar barra puerto servidor
if(point_distance(mouse_x, mouse_y, room_width * 0.15, room_height * 0.85) &lt; m_mouse){
    aux = 1.2;
}
else{
    aux = 1;
}
if(escribe == 4){
    c_c = c_orange;
}
else{
    c_c = c_white;
}
draw_sprite_ext(d_texto, 0, room_width * 0.15, room_height * 0.85, aux, aux, 0, c_c, 1);
draw_text_transformed_colour(room_width * 0.15, room_height * 0.85, string(o_control.q_puerto), aux, aux, 0, c_black, c_black, c_black, c_black, 1);

draw_set_halign(fa_left);
draw_set_valign(fa_bottom);

//botones manejar archivos
for(i = 1; i &lt; 7; i++){
    if(point_distance(mouse_x, mouse_y, room_width * 0.07 * i, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
        aux = 1.2;
        switch(i){
            case 1:
                draw_text_transformed_colour(5, room_height - 5,
                    "choose maps",
                    0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
            break;
            case 2:
                draw_text_transformed_colour(5, room_height - 5,
                    "import maps in .ini format (should start with mupa_*)",
                    0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
            break;
            case 3:
                draw_text_transformed_colour(5, room_height - 5,
                    "export maps in .ini format",
                    0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
            break;
            case 4:
                draw_text_transformed_colour(5, room_height - 5,
                    "destroy map definitely",
                    0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
            break;
            case 5:
                draw_text_transformed_colour(5, room_height - 5,
                    "save a map image in .png format",
                    0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
            break;
            case 6:
                draw_text_transformed_colour(5, room_height - 5,
                    "choose maps",
                    0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
            break;
        }
    }
    else{
        aux = 1;
    }
    draw_sprite_ext(d_botones, i - 1, room_width * 0.07 * i, room_height * 0.3 + m_mouse * 2.2, aux, aux, 0, -1, 1);
}

//boton fullscreen
if(point_distance(mouse_x, mouse_y, 24, 24) &lt; m_mouse){
    aux = 1.2;
    draw_text_transformed_colour(5, room_height - 5,
        "F4 always choose between fullscreen / windowed",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
draw_sprite_ext(d_botones, 19, 24, 24, aux, aux, 0, -1, 1);

//boton cerrar
if(point_distance(mouse_x, mouse_y, room_width - 24, 24) &lt; m_mouse){
    aux = 1.2;
    draw_text_transformed_colour(5, room_height - 5,
        "escape always exit the game",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
draw_sprite_ext(d_botones, 6, room_width - 24, 24, aux, aux, 0, -1, 1);
    
//boton volumen sonido
if(point_distance(mouse_x, mouse_y, room_width - 74, 24) &lt; m_mouse){
    aux = o_control.sonido + 0.4;
    draw_text_transformed_colour(5, room_height - 5,
        "F3 always change sound volume",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = o_control.sonido + 0.2;
}
draw_sprite_ext(d_botones, 7, room_width - 74, 24, aux, aux, 0, -1, 1);

//botones cambiapelos
if(point_distance(mouse_x, mouse_y, room_width * 0.875, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
    aux = 1.2;
    draw_text_transformed_colour(5, room_height - 5,
        "change hair style",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
draw_sprite_ext(d_botones, 5, room_width * 0.875, room_height * 0.3 + m_mouse * 2.2, aux, aux, 0, -1, 1);
//
if(point_distance(mouse_x, mouse_y, room_width * 0.625, room_height * 0.3 + m_mouse * 2.2) &lt; m_mouse){
    aux = 1.2;
    draw_text_transformed_colour(5, room_height - 5,
        "change hair style",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
draw_sprite_ext(d_botones, 0, room_width * 0.625, room_height * 0.3 + m_mouse * 2.2, aux, aux, 0, -1, 1);

//monigote
draw_sprite(d_patas, 0, room_width * 0.75, room_height * 0.75);
draw_sprite(d_municion, 8, room_width * 0.75, room_height * 0.75);
draw_sprite(d_banderin, 0, room_width * 0.75, room_height * 0.75);
draw_sprite(d_cuerpos0, 0, room_width * 0.75, room_height * 0.75);
draw_sprite(d_pelos, o_control.q_pelo, room_width * 0.75, room_height * 0.75);
draw_sprite(d_prexpresa, 0, room_width * 0.75, room_height * 0.75);
draw_sprite(d_dispara, 0, room_width * 0.75, room_height * 0.75);

//botones idioma
if(point_distance(mouse_x, mouse_y, room_width * 0.625, room_height * 0.63) &lt; m_mouse){
    aux = 1.2;
    draw_text_transformed_colour(5, room_height - 5,
        "choose your character languaje (only sound)",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
if(o_control.q_idioma &gt; 2){//cambiar
    draw_sprite_ext(d_idiomas, o_control.q_idioma, room_width * 0.625, room_height * 0.63, aux, aux, 0, c_gray, 0.75);
}
else{
    draw_sprite_ext(d_idiomas, o_control.q_idioma, room_width * 0.625, room_height * 0.63, aux, aux, 0, -1, 1);
}

//botones modalidades server
if(point_distance(mouse_x, mouse_y, room_width * 0.21, room_height * 0.55) &lt; m_mouse){
    aux = 1.2;
    draw_text_transformed_colour(5, room_height - 5,
        "active: restore points of life by time",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
if(regeplus){
    draw_sprite_ext(d_botones, 8, room_width * 0.21, room_height * 0.55, aux, aux, 0, -1, 1);
}
else{
    draw_sprite_ext(d_botones, 8, room_width * 0.21, room_height * 0.55, aux, aux, 0, c_dkgray, 1);
}
//
if(point_distance(mouse_x, mouse_y, room_width * 0.28, room_height * 0.55) &lt; m_mouse){
    aux = 1.2;
    draw_text_transformed_colour(5, room_height - 5,
        "heart: who lost their lives will be eliminated#star: won who first reach certain score",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
draw_sprite_ext(d_botones, 12 + porpuntos, room_width * 0.28, room_height * 0.55, aux, aux, 0, -1, 1);
//
if(point_distance(mouse_x, mouse_y, room_width * 0.35, room_height * 0.55) &lt; m_mouse){
    aux = 1.2;
    draw_text_transformed_colour(5, room_height - 5,
        "white: no npcs, red: all npcs in one group#colours: npcs evenly distributed, green: npcs all vs all",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
draw_sprite_ext(d_botones, 14 + o_control.ordenanpcs, room_width * 0.35, room_height * 0.55, aux, aux, 0, -1, 1);

//pegar ip del portapapeles
if(point_distance(mouse_x, mouse_y, room_width * 0.35, room_height * 0.85) &lt; m_mouse){
    aux = 1.2;
    draw_text_transformed_colour(5, room_height - 5,
        "paste ip from clipboard",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
draw_sprite_ext(d_botones, 21, room_width * 0.35, room_height * 0.85, aux, aux, 0, -1, 1);

//boton editor
if(point_distance(mouse_x, mouse_y, room_width * 0.07, room_height * 0.55) &lt; m_mouse){
    aux = 1.4;
    draw_text_transformed_colour(5, room_height - 5,
        "Editor, create your maps",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
draw_sprite_ext(d_botones, 11, room_width * 0.07, room_height * 0.55, aux, aux, 0, -1, 1);

//boton servidor
if(point_distance(mouse_x, mouse_y, room_width * 0.42, room_height * 0.55) &lt; m_mouse){
    aux = 1.4;
    draw_text_transformed_colour(5, room_height - 5,
        "Server, open a map to play",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
draw_sprite_ext(d_botones, 10, room_width * 0.42, room_height * 0.55, aux, aux, 0, -1, 1);

//boton cliente
if(point_distance(mouse_x, mouse_y, room_width * 0.42, room_height * 0.85) &lt; m_mouse){
    aux = 1.4;
    draw_text_transformed_colour(5, room_height - 5,
        "Client, connect with ip and port specified",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
draw_sprite_ext(d_botones, 9, room_width * 0.42, room_height * 0.85, aux, aux, 0, -1, 1);

//creditos y mas games
if(point_distance(mouse_x, mouse_y, room_width - 24, room_height - 72) &lt; m_mouse){
    aux = 1.2;
    draw_text_transformed_colour(5, room_height - 5,
        "more games",
        0.7, 0.7, 0, c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);
}
else{
    aux = 1;
}
draw_sprite_ext(d_botones, 18, room_width - 24, room_height - 72, aux, aux, 0, -1, 1);
draw_set_halign(fa_right);
draw_set_valign(fa_bottom);
draw_text_colour(room_width - 2, room_height - 2, "voces: Larva#Omarsaurio",
    c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1);

draw_sprite(d_mouse, 0, mouse_x, mouse_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
