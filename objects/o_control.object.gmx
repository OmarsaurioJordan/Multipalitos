<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>q_nombre = "";
q_idioma = 0;
q_pelo = 0;

q_web = "127.0.0.1";
q_puerto = 1024;

ordenanpcs = 1;
mapa = "";

sonido = 1;
nuevaversion = false;
leeversion = -1;

audio_channel_num(150);
audio_falloff_set_model(audio_falloff_linear_distance_clamped);
audio_listener_orientation(0, 0, 1, 0, -1, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///comandos
if(keyboard_check_pressed(vk_anykey)){
    switch(keyboard_key){
        case vk_escape:
            if(room == w_menu){
                var unun;
                unun = false;
                with(o_mensaje){
                    if(elmensaje == "exit?"){
                        unun = true;
                    }
                }
                if(unun){
                    game_end();
                }
                else{
                    s_creamensaje("exit?", c_gray);
                }
            }
            else{
                if(instance_exists(o_fondonegro)){
                    room_goto(w_menu);
                }
                else{
                    instance_create(0, 0, o_fondonegro);
                }
            }
        break;
        case vk_f3:
            if(sonido == 1){
                sonido = 0;
            }
            else{
                sonido += 0.1;
            }
            ini_open("configuracion.ini");
            ini_write_string("juego", "sonido", string(sonido));
            ini_close();
            audio_master_gain(sonido);
        break;
        case vk_f4:
            if(window_get_fullscreen()){
                window_set_fullscreen(false);
                ini_open("configuracion.ini");
                ini_write_string("juego", "full", "0");
                ini_close();
                s_ventana();
            }
            else{
                window_set_fullscreen(true);
                ini_open("configuracion.ini");
                ini_write_string("juego", "full", "1");
                ini_close();
            }
        break;
        case vk_f10:
            if(window_get_fullscreen()){
                window_set_fullscreen(false);
                ini_open("configuracion.ini");
                ini_write_string("juego", "full", "0");
                ini_close();
                s_ventana();
            }
            else{
                var aux;
                aux = get_save_filename("PNG|*.png", "image");
                if(aux != ""){
                    screen_save(aux);
                }
            }
        break;
        case ord('P'):
            if(room == w_mundo){
                if(audio_is_playing(a_music)){
                    audio_stop_sound(a_music);
                }
                else{
                    var cg;
                    cg = audio_play_sound(a_music, 20, true);
                    audio_sound_gain(cg, 0.2, 0);
                }
            }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///ahorro grafico y listener
if(room != w_menu){
    s_ahorrografico();
}
if(room == w_mundo){
    audio_listener_position(view_xview[0] + view_wview[0] * 0.5,
        view_yview[0] + view_hview[0] * 0.5, -200);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//comprobar nueva version del juego
if ds_map_find_value(async_load, "id") == leeversion
{
    if ds_map_find_value(async_load, "status") == 0
    {
        var aux = ds_map_find_value(async_load, "result");
        if aux != m_version and string_length(aux) &lt;= 8
        {
            nuevaversion = true;
            ini_open("configuracion.ini");
            ini_write_string("menu", "nuevaversion", aux);
            ini_close();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
