<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>o_objeto</parentName>
  <maskName>d_base3</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///inicializacion

//datos generales
xyz = 0;
lanzador = 0;
tipo = 0;

//temporizadores
existencia = t_existencia;

//otros
delta = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!escliente){
    s_env16(xyz);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///temporizadores
delta = delta_time * 0.000001;

//reajuste media existencia
if(existencia == t_existencia and tipo == 4){
    existencia = t_existencia * 0.2;
}

//existencia
existencia -= delta;
if(existencia &lt;= 0){
    s_fragmentacion(id);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movimiento y colisiones

var f_x, f_y, n_x, n_y;

if(tipo == 1){
    f_x = x + lengthdir_x(m_velflecha * delta * 1.8, direction);
    f_y = y + lengthdir_y(m_velflecha * delta * 1.8, direction);
}
else{
    f_x = x + lengthdir_x(m_velflecha * delta, direction);
    f_y = y + lengthdir_y(m_velflecha * delta, direction);
}
n_x = x + lengthdir_x(point_distance(x, y, f_x, f_y) * 0.5, direction);
n_y = y + lengthdir_y(point_distance(x, y, f_x, f_y) * 0.5, direction);

if(escliente){
    if(place_meeting(n_x, n_y, o_bloque)){
        instance_destroy();
    }
    else if(place_meeting(f_x, f_y, o_bloque)){
        instance_destroy();
    }
    else{
        x = f_x;
        y = f_y;
        depth = -y;
    }
}
else{
    var otrocoso, moverse;
    
    if(place_meeting(n_x, n_y, o_bloque)){
        s_sonido(lanzador, n_x, n_y, 1, -1, true);
        moverse = false;
    }
    else{
        otrocoso = instance_place(n_x, n_y, o_unidad);
        if(otrocoso != noone){
            if(ss_golpeado(id, otrocoso)){
                if(place_meeting(f_x, f_y, o_bloque)){
                    s_sonido(lanzador, f_x, f_y, 1, -1, true);
                    moverse = false;
                }
                else{
                    otrocoso = instance_place(n_x, n_y, o_unidad);
                    if(otrocoso != noone){
                        if(ss_golpeado(id, otrocoso)){
                            moverse = true;
                        }
                        else{
                            moverse = false;
                        }
                    }
                    else{
                        moverse = true;
                    }
                }
            }
            else{
                moverse = false;
            }
        }
        else{
            if(place_meeting(f_x, f_y, o_bloque)){
                s_sonido(lanzador, f_x, f_y, 1, -1, true);
                moverse = false;
            }
            else{
                otrocoso = instance_place(f_x, f_y, o_unidad);
                if(otrocoso != noone){
                    if(ss_golpeado(id, otrocoso)){
                        moverse = true;
                    }
                    else{
                        moverse = false;
                    }
                }
                else{
                    moverse = true;
                }
            }
        }
    }
    
    if(moverse){
        x = f_x;
        y = f_y;
        depth = -y;
    }
    else{
        s_fragmentacion(id);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(tipo){
    case 1:
        draw_sprite_ext(d_flechas, 1, x, y, 1, 1, direction, c_dkgray, 0.3);
        draw_sprite_ext(d_flechas, 1, x, y - 75, 1, 1, direction, -1, 1);
    break;
    case 2:
        draw_sprite_ext(d_flechas, 2, x, y, 1, 1, direction, c_dkgray, 0.3);
        draw_sprite_ext(d_flechas, 2, x, y - 75, 1, 1, direction, -1, 1);
    break;
    case 3:
        draw_sprite_ext(d_flechas, 3, x, y, 1, 1, direction, c_dkgray, 0.3);
        draw_sprite_ext(d_flechas, 3, x, y - 75, 1, 1, direction, -1, 1);
    break;
    default:
        draw_sprite_ext(d_flechas, 0, x, y, 1, 1, direction, c_dkgray, 0.3);
        draw_sprite_ext(d_flechas, 0, x, y - 75, 1, 1, direction, -1, 1);
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
